pipeline {
  agent {
    kubernetes {
      label 'promo-app'  // all your pods will be named with this prefix, followed by a unique id
      idleMinutes 5  // how long the pod will live after no jobs have run on it
      yamlFile 'build-pod.yaml'  // path to the pod definition relative to the root of our project
      defaultContainer 'maven'  // define a default container if more than a few stages use it, will default to jnlp container
    }
  }
  stages {
    stage('Build Docker Image') {
      steps {
        container('maven') {
          sh "mvn clean package"  // when we run docker in this step, we're running it via a shell on the docker build-pod container,
      }
    }
  }
}
}


stage('DownLoad Kube Config') {
  steps {
    withCredentials([usernamePassword(credentialsId: 'aws-creds', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY')]) {
      sh '''
      aws configure set aws_access_key_id $AWS_ACCESS_KEY
      aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      aws configure set default.region $AWS_REGION
      aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
      '''
    }
  }
}
stage('Kubernetes Deploy') {
  steps {
    sh 'echo $PROJECT_VERSION'
    sh './kubernetes/run_deployment.sh'
  }
}
stage('Kubernetes Deploy Service') {
  steps {
    sh 'kubectl apply -f kubernetes/service.yaml'
  }
}
